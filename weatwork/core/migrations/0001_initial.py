# Generated by Django 3.2.7 on 2021-10-07 12:57

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=255, unique=True)),
                ('first_name', models.CharField(max_length=255)),
                ('last_name', models.CharField(max_length=255)),
                ('nickname', models.CharField(max_length=255)),
                ('linkedin', models.URLField(max_length=255, unique=True)),
                ('instagram', models.URLField(max_length=255, unique=True)),
                ('youtube', models.URLField(max_length=255, unique=True)),
                ('twitter', models.URLField(max_length=255, unique=True)),
                ('udemy', models.URLField(max_length=255, unique=True)),
                ('quora', models.URLField(max_length=255, unique=True)),
                ('snapchat', models.URLField(max_length=255, unique=True)),
                ('twitch', models.URLField(max_length=255, unique=True)),
                ('tiktok', models.URLField(max_length=255, unique=True)),
                ('country', models.CharField(max_length=255)),
                ('region', models.CharField(max_length=255)),
                ('city', models.CharField(max_length=255)),
                ('address', models.CharField(max_length=255)),
                ('zip_code', models.CharField(default=None, max_length=255)),
                ('current_company_name', models.CharField(max_length=255)),
                ('current_company_website', models.URLField(max_length=255)),
                ('current_company_address', models.CharField(max_length=255)),
                ('current_company_activity_area', models.CharField(max_length=255)),
                ('current_job', models.CharField(max_length=255)),
                ('current_job_start_date', models.DateField(default=None)),
                ('next_availability_date', models.DateField(default=None)),
                ('work_experience_in_months', models.IntegerField(default=0)),
                ('is_company_owner', models.BooleanField(default=None)),
                ('is_self_employed', models.BooleanField(default=None)),
                ('is_open_to_work', models.BooleanField(default=None)),
                ('is_notice_period', models.BooleanField(default=None)),
                ('is_showing_photos', models.BooleanField(default=True)),
                ('is_showing_videos', models.BooleanField(default=True)),
                ('is_showing_cv', models.BooleanField(default=True)),
                ('is_showing_social_media_badges', models.BooleanField(default=True)),
                ('is_showing_degrees', models.BooleanField(default=True)),
                ('is_showing_certifications', models.BooleanField(default=True)),
                ('is_showing_given_recommendations', models.BooleanField(default=True)),
                ('is_showing_received_recommendations', models.BooleanField(default=True)),
                ('is_download_allowed', models.BooleanField(default=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
